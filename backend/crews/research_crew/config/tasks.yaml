# src/research_crew/config/tasks.yaml
property_search_task:
  description: >
    Analyze the user query: "{query}" and extract key information about the property search request.
    First, determine what the user is looking for:
    - Is the user looking for properties for sale, for rent, or recently sold?
    - What location is the user interested in?
    - Are there any specific property types mentioned (house, condo, apartment)?
    - Is there a price range mentioned or implied?
    - Are there any bedroom or bathroom requirements?
    - Are there any special features requested?

    Then, use the appropriate tools to search for properties that match these criteria.

    ## Tool instructions
    - You can combine multiple tools if needed, using the output of one tool as input to another.
    - Many of the search tools have pagination, so you may need to use multiple tools to get a complete list of properties.
    - Do not overwhelm the user with too many properties.
    - Not all tools are necessary, use only the tools that are relevant to the search criteria.

    If the query is ambiguous, ask the user for clarification.
  expected_output: >
    A comprehensive list of properties that match the search criteria extracted from the user query,
    with each property containing detailed information including address, price, features, photos,
    agent details, and environmental considerations. The list should be well-structured and include
    a summary of market trends for the specified location.
  agent: property_search

render_report:
  description: >
    Analyze the property list and create json object with property list
  expected_output: >
    A JSON object containing the property list with the following structure:
    {
      "properties": [
        {
          "address": "123 Main St",
          "price": 100000,
          "bedrooms": 3,
          "bathrooms": 2,
          "sqft": 1500,
          "agent": "John Doe",
          "agent_phone": "555-1234",
          "agent_email": "john.doe@example.com",
          "environmental_risk": "low",
          "photos": [
            "https://example.com/photo1.jpg",
            "https://example.com/photo2.jpg",
            "https://example.com/photo3.jpg"
          ]
        }
      ]
    }

  agent: property_search
  output_file: output/property_list.json
  context:
    - property_search_task
